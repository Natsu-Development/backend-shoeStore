<div class="app-content content">
    <div class="content-wrapper">
        <div class="content-wrapper-before"></div>
        <div class="content-header row">
            <div class="content-header-left col-md-4 col-12 mb-2">
            <h3 class="content-header-title">Product</h3>
            </div>
            <div class="content-header-right col-md-8 col-12">
            <div class="breadcrumbs-top float-md-right">
                <div class="breadcrumb-wrapper mr-1">
                <ol class="breadcrumb">
                    {{!-- must automation this link --}}
                    <li class="breadcrumb-item"><a href="/admin">Home</a>
                    </li>
                    <li class="breadcrumb-item"><a href="/admin/product">Product</a>
                    </li>
                    <li class="breadcrumb-item active">Update Product
                    </li>
                </ol>
                </div>
            </div>
            </div>
        </div>
        <div class="content-body">
            <div class="row">
                <div class="col-12">
                    <form method="POST" action="/admin/product/saveUpdate/{{result._id}}?_method=PUT" name="product-update-form" enctype='multipart/form-data'>
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title">Update Product</h4>
                                <a class="heading-elements-toggle"><i class="la la-ellipsis-v font-medium-3"></i></a>
                                <div class="heading-elements">
                                    <ul class="list-inline mb-0">
                                        <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                                        <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                                        <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                                        <li><a data-action="close"><i class="ft-x"></i></a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="card-content collapse show">
                                <div style="margin: 0 20px">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">Name</label>
                                        <input type="text" class="form-control" name="name" placeholder="Enter shoeName" value="{{result.name}}">
                                    </div>

                                    {{!-- Get Cate Of Product Assigned And All CateType added --}}
                                    {{#if listAnotherCate}}
                                        {{getCategoryAssigned listAnotherCateAdded listAnotherCate listCateType}}
                                    {{/if}}

                                    <div class="form-group">
                                        <label for="exampleInputEmail1">Introduce of product</label>
                                        <textarea id="ckeditor-introduce" cols="30" rows="15" class="ckeditor">{{result.introduce}}</textarea>
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputPassword1">Description</label>
                                        <textarea id="ckeditor-description" cols="30" rows="15" class="ckeditor">{{result.description}}</textarea>
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputPassword1">Gender</label>
                                        <select name="gender" class="form-control">
                                            <option value="male"
                                                {{#when result.gender 'eq' 'male'}}
                                                    selected
                                                {{/when}}
                                            >Male</option>
                                            <option value="female"
                                                {{#when result.gender 'eq' 'female'}}
                                                    selected
                                                {{/when}}
                                            >Female</option>
                                        </select>
                                    </div>
                                </div>

                                {{!-- <div id="imageFields">
                                {{#each result.arrayImage}}
                                    <div class="form-group imageField">
                                        <input class="form-check-input" type="checkbox" id="flexCheckChecked" value="{{this.position}}" name="checkBoxImage" onchange="getArrayImageDelete()">
                                        <label for="exampleInputPassword1">Images</label>
                                        <input type="file" class="form-control" name="image" id="image" value="{{this.position}}" onchange="displayImg(event)">
                                        <img class="imgEdit" name="imageChange" src="/upload/{{this.filename}}" alt="Images of product" style="width: 25%;max-height: 310px;margin: 0.5% 37.5%; min-height: 105px; min-width: 10%;">
                                    </div>
                                {{/each}}
                                </div>
                                <button class="btn btn-primary" id="btnAddFieldImage" type="button">Add field Image</button>
                                <button class="btn btn-primary" id="btnDeleteFieldImage" type="button">Delete Image Of Shoe</button>
                                <div class="form-group">
                                    <label for="exampleInputPassword1">Sizes in US/UK (Enter the amount of the shoes)</label>
                                    {{#if listSize}}
                                        {{#each listSize}}
                                        <div class ="form-check" style="margin: 2%">
                                            <input value="{{this.sizeId}}" name="sizeId" type="hidden">
                                            <label class="form-check-label" for="flexCheckDefault" style="margin-right: 2%; width: 5%">
                                                {{this.size}}
                                            </label>
                                            <input type="number" name="amountOfSize" placeholder="Enter amount of this size" value="{{this.amount}}" style="max-width: 8%" min="0">
                                        </div>  
                                        {{/each}}
                                    {{/if}}
                                    {{#else}}
                                        {{#each listSizeAdded}}
                                        <div class ="form-check" style="margin: 2%">
                                            <input value="{{this.cateId}}" name="size" type="hidden">
                                            <label class="form-check-label" for="flexCheckDefault" style="margin-right: 2%; width: 5%">
                                                {{this.cateName}}
                                            </label>
                                            <input type="number" name="amountOfSize" placeholder="Enter amount of this size" style="max-width: 8%">
                                        </div>  
                                        {{/each}}
                                    {{/else}}
                                </div> 
                                <div class="form-group">
                                    <label for="exampleInputPassword1">Price</label>
                                    <input type="text" class="form-control" name="price" placeholder="Enter Description" value="{{result.price}}">
                                </div> --}}
                            </div>
                        </div>

                        {{!-- List to choose to render color of product --}}
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title">Choose Color</h4>
                                <a class="heading-elements-toggle"><i class="la la-ellipsis-v font-medium-3"></i></a>
                                <div class="heading-elements">
                                    <ul class="list-inline mb-0">
                                        <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                                        <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                                        <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                                        <li><a data-action="close"><i class="ft-x"></i></a></li>
                                    </ul>
                                </div>
                            </div>

                            {{!-- Selected Color --}}
                            <div class="card-content collapse show">
                                <div class="cart-body">
                                    <div style="margin: 0 20px;">
                                        <div class="form-group">
                                            <select class="select2 form-control" id="color-select" multiple style="margin-bottom: 20px">
                                                {{{getColorAssigned listColor listColorInfo}}}
                                            </select>
                                            <button id="btnRenderSelectedColor" class="btn btn-primary">Render Selected Color</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {{!-- Image And Size --}}
                        {{#each listColorInfo}}
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title">{{this.colorName}}</h4>
                                    <a class="heading-elements-toggle"><i class="la la-ellipsis-v font-medium-3"></i></a>
                                    <div class="heading-elements">
                                        <ul class="list-inline mb-0">
                                            <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                                            <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                                            <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                                            <li><a data-action="close"><i class="ft-x"></i></a></li>
                                        </ul>
                                    </div>
                                </div>

                                <div class="card-content collapse show" style="margin: 0 20px;">
                                    <div id="imageFields{{this.colorName}}">                                    
                                        <div class="form-group imageField{{this.colorName}}">
                                            {{!-- <input class="form-check-input" type="checkbox" id="flexCheckChecked" value="0" name="checkBoxImage${color.cateName}" onclick="getArrayImageDelete${color.cateName}(0)"> --}}
                                            <label for="exampleInputPassword1">Image Avatar</label>
                                            <input type="file" class="form-control imageWithColor{{../this.colorName}}" name="image" placeholder="Select image" accept='image/*' value="{{this.avatar}}">
                                            <img class="imgEdit" name="imageChange" src="/uploadWithRefactorDB/{{this.avatar}}" alt="Images of product" style="width: 25%;max-height: 310px;margin: 0.5% 37.5%; min-height: 105px; min-width: 10%;">
                                        </div>
                                        <div class="form-group imageField{{this.colorName}}">
                                            {{!-- <input class="form-check-input" type="checkbox" id="flexCheckChecked" value="0" name="checkBoxImage${color.cateName}" onclick="getArrayImageDelete${color.cateName}(0)"> --}}
                                            <label for="exampleInputPassword1">Image Detail</label>
                                            {{#each this.listImgByColor}}
                                                <input type="file" class="form-control imageWithColor{{../this.colorName}}" name="image" placeholder="Select image" accept='image/*' value="{{this}}">
                                                <img class="imgEdit" name="imageChange" src="/uploadWithRefactorDB/{{this}}" alt="Images of product" style="width: 25%;max-height: 310px;margin: 0.5% 37.5%; min-height: 105px; min-width: 10%;">
                                            {{/each}}
                                        </div>
                                    </div>
                                    <button class="btn btn-primary" id="btnAddFieldImage${color.cateName}" type="button">Add field Image</button>
                                    <button class="btn btn-primary" id="btnDeleteFieldImage${color.cateName}" type="button">Delete Image Of Shoe</button>
                                    {{!-- Size and price of each size and color --}}
                                    <div class="form-group">
                                        <label for="exampleInputPassword1">Sizes in US/UK (Enter the amount of the shoes)</label>
                                        {{{getSizeInfo ../listSizeAdded this.listSizeByColor}}}
                                    </div> 
                                </div>
                            </div>
                        {{/each}}
                        <button type="button" class="btn btn-primary" id="btnUpdate">Update</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    // delete image of shoes
    var arrayImageDelete = [], arrayImageAddAndUpdate = [];

    // have error in this function check itttttttt
    function getArrayImageDelete() {
        const listCheckBoxImage = document.getElementsByName('checkBoxImage');
        arrayImageDelete = Array.from(listCheckBoxImage) // Convert checkboxes to an array to use filter and map.
            .filter(i => i.checked) // Use Array.filter to remove unchecked checkboxes.
            .map(i => i.value).sort(); // Use Array.map to extract only the checkbox values from the array of objects.
        console.log(arrayImageDelete);
    }

    // List field image and field image to handle
    const listFieldImage = document.getElementById('imageFields');
    const imageField = document.getElementsByClassName('imageField');

    // add field image
    /*var selectedFile = document.getElementsByName("image");
    document.getElementById('btnAddFieldImage').addEventListener('click', () => {
        const position = selectedFile.length;
        listFieldImage.insertAdjacentHTML('beforeend', 
        `<div class="form-group imageField">
            <input class="form-check-input" type="checkbox" id="flexCheckChecked" value="${position}" name="checkBoxImage" onchange="getArrayImageDelete()">
            <label for="exampleInputPassword1">Images</label>
            <input type="file" class="form-control" name="image" id="image" value="${position}" onchange="displayImg(event)">
            <img class="imgEdit" name="imageChange" src="" alt="Images of product" style="width: 25%;max-height: 310px;margin: 0.5% 37.5%; min-height: 105px; min-width: 10%;">
        </div>`); 
    });

    // delete field image on interface
    document.getElementById('btnDeleteFieldImage').addEventListener('click', () => {
        var arrayImage = Array.from(document.getElementsByName("image")).map(i => i.defaultValue);
        // list field image for delete (display: none)
        var arrayDeleteFieldImg = arrayImageDelete.filter(position => arrayImage.includes(position)).reverse();
        // list position need delete have exist in arrayAddAndDelete, delete it
        var deleteImageInArrImg = arrayImageDelete.filter(position => arrayImageAddAndUpdate.includes(position));
        deleteImageInArrImg.forEach(position => {arrayImageAddAndUpdate[position] = ''});
        console.log(arrayDeleteFieldImg);
        // display: none that imageField have been deleted
        arrayDeleteFieldImg.forEach(position => {
            imageField[position].style = "display: none";
        });
    }); 

    // display image when update or add
    function displayImg(event) {
        var srcImage = document.getElementsByName("imageChange");
        // get value of previous image to DELETE
        const positionHasExist = arrayImageAddAndUpdate.filter(position => position === event.target.defaultValue);
        if(positionHasExist.length === 0) {
            arrayImageAddAndUpdate.push(`${event.target.defaultValue}`);
        }
        // display new image when have update.
        srcImage[event.target.defaultValue].src = URL.createObjectURL(event.target.files[0]);
        srcImage[event.target.defaultValue].onload = function() {
            URL.revokeObjectURL(srcImage[event.target.defaultValue].src) // free memory
        }
        console.log(arrayImageAddAndUpdate);
    }*/

    // format position of field input for display Image
    
    // handle update   
    document.getElementById("btnUpdate").onclick = function(e) {
        e.preventDefault();

        const editorIntroduce = CKEDITOR.instances['ckeditor-introduce'].getData();
        const editorDescription = CKEDITOR.instances['ckeditor-description'].getData();

        //var formToUpdate = document.forms['product-update-form'];
        const form = document.getElementById("product-update-form");
        const formToUpdate = new FormData(form);
        formToUpdate.append("introduce", editorIntroduce);
        formToUpdate.append("description", editorDescription);
        formToUpdate.action += '&image=' + arrayImageAddAndUpdate + '&imageDelete=' + arrayImageDelete;
        formToUpdate.submit();
    }
</script>